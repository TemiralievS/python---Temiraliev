"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

# хранилище

firms_dict = {'firm_1': 1200, 'firm_2': 1000, 'firm_3': 980, 'firm_4': 3000, 'firm_5': 700}


"""
1 Способ. Сложность O(N^2)
"""
values_sorted = sorted(firms_dict.values(), reverse=True)  # O(N log N) список с отсортированными значениями
sorted_dict_1 = {}  # O(1)

for i in values_sorted:  # O(N)
    for key in firms_dict.keys():  # O(N)
        if firms_dict[key] == i:  # O(1)
            sorted_dict_1[key] = firms_dict[key]
            break

list_s = list(sorted_dict_1)  # O(N)
print('Три компании с самым большим годовым доходом', list_s[0:3])

"""
2 Способ. Сложность O(N log N)
"""
sorted_dict_2 = {}  # O(1)
sorted_keys = sorted(firms_dict, key=firms_dict.get, reverse=True)  # O(N log N)

for j in sorted_keys:  # O(N)
    sorted_dict_2[j] = firms_dict[j]

list_s = list(sorted_dict_1)  # O(N)
print('Три компании с самым большим годовым доходом', list_s[0:3])

#  Второй способ эффективнее т.к. итоговая сложность O(N log N) < O(N^2)



